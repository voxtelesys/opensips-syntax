{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "OpenSIPS",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#controls"
		},
		{
			"include": "#nulls"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#strings-sq"
		},
		{
			"include": "#strings-dq"
		},
		{
			"include": "#routes"
		},
		{
			"include": "#macros"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.opensips",
					"begin": "/\\*",
					"end": "\\*/"
				},
				{
					"name": "comment.line.number-sign",
					"begin": "#",
					"end": "\\n"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.opensips",
					"match": ":=|=|~|<|>|\\+|-|\\*|\\^|&|/|%|\\||!"
				}
			]
		},
		"controls": {
			"patterns": [
				{
					"name": "keyword.control.opensips",
					"match": "\\b(if|else|while|switch|case|break|default)\\b"
				}
			]
		},
		"nulls": {
			"patterns": [
				{
					"name": "constant.language.opensips",
					"match": "\\bNULL\\b"
				}
			]
		},
		"booleans": {
			"patterns": [
				{
					"name": "constant.language.opensips",
					"match": "\\b(true|false|yes|no)\\b"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.opensips",
					"match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b"
				}
			]
		},
		"strings-sq": {
			"name": "string.quoted.single.opensips",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.opensips",
					"match": "\\\\."
				}
			]
		},
		"strings-dq": {
			"name": "string.quoted.double.opensips",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.opensips",
					"match": "\\\\."
				}
			]
		},
		"routes": {
			"patterns": [
				{
					"match": "\\b(route|branch_route|failure_route|onreply_route|timer_route|event_route)\\s*\\[(\\w+)",
					"captures": {
						"1": {
							"name": "entity.name.class.opensips"
						},
						"2": {
							"name": "constant.other.opensips"
						}
					}
				},
				{
					"match": "\\b(route|branch_route|failure_route|onreply_route|startup_route|local_route|error_route)\\s*{",
					"captures": {
						"1": {
							"name": "entity.name.class.opensips"
						}
					}
				},
				{
					"match": "\\b(route)\\s*\\((\\w+)",
					"captures": {
						"1": {
							"name": "entity.name.function.opensips"
						},
						"2": {
							"name": "constant.other.opensips"
						}
					}
				}
			]
		},
		"macros": {
			"patterns": [
				{
					"match": "\\b(ifdef)\\((`\\w+')",
					"captures": {
						"1": {
							"name": "storage.type.opensips"
						},
						"2": {
							"name": "constant.other.opensips"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.opensips"
}